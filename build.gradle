plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.WavJaby'
archivesBaseName = "TinyJson"

sourceCompatibility = 1.8 // java 8
targetCompatibility = 1.8

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.json:json:20220320'
}

artifacts {
    archives jar
    archives sourcesJar
//    archives javadocJar
}

repositories {
    mavenCentral()
}

configurations {
    archives {
    }
}

println "version: " + version
def isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'tiny-json'

            artifact jar
            artifact sourcesJar
//            artifact javadocJar

            pom {
                inceptionYear = '2023'
                name = project.name
                description = 'A simple json library'
                url = 'https://github.com/WavJaby/TinyJson'
                packaging = 'jar'
                description = project.description
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/WavJaby/TinyJson.git'
                    developerConnection = 'scm:git:ssh://github.com/WavJaby/TinyJson.git'
                    url = 'https://github.com/WavJaby/TinyJson'
                }
                developers {
                    developer {
                        id = 'wavjaby'
                        email = 'WavJaby@gmail.com'
                    }
                    developer {
                        id = 'bloodnighttw'
                        email = 'bbeenn1227@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
            if (isReleaseVersion)
                url "https://s01.oss.sonatype.org/content/repositories/releases/"
            else
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

wrapper {
    gradleVersion = "7.1.1"
    distributionType = Wrapper.DistributionType.ALL
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
    sign configurations.archives
}
